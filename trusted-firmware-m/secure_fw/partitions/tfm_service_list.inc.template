/*
 * Copyright (c) 2018-2021, Arm Limited. All rights reserved.
 *
 * SPDX-License-Identifier: BSD-3-Clause
 *
 */

{{utilities.donotedit_warning}}

#ifndef __TFM_SERVICE_LIST_INC__
#define __TFM_SERVICE_LIST_INC__

{% for partition in partitions %}
#ifdef {{partition.attr.conditional}}
#include "{{partition.header_file}}"
#endif /* {{partition.attr.conditional}} */

{% endfor %}

const struct tfm_spm_service_db_t service_db[] =
{
{% for partition in partitions %}
    {% if partition.attr.tfm_partition_ipc %}
        {% if partition.manifest.services %}
            {% if partition.attr.conditional %}
#ifdef {{partition.attr.conditional}}
            {% endif %}
    /******** {{partition.manifest.name}} ********/
            {% for service in partition.manifest.services %}
    {{'{'}}
        .name = "{{service.name}}",
        .partition_id = {{partition.manifest.name}},
        .signal = {{service.name}}_SIGNAL,
        .sid = {{service.sid}},
            {% if service.non_secure_clients is sameas true %}
        .non_secure_client = true,
            {% else %}
        .non_secure_client = false,
            {% endif %}
            {% if partition.manifest.psa_framework_version > 1.0 and service.connection_based is sameas false %}
        .connection_based = false,
            {% else %}
        .connection_based = true,
            {% endif %}
            {% if service.version %}
        .version = {{service.version}},
            {% else %}
        .version = 1,
            {% endif %}
            {% if service.version_policy %}
        .version_policy = TFM_VERSION_POLICY_{{service.version_policy}}
            {% else %}
        .version_policy = TFM_VERSION_POLICY_STRICT
            {% endif %}
    {{'}'}},
            {% endfor %}
            {% if partition.attr.conditional %}
#endif /* {{partition.attr.conditional}} */
            {% endif %}
        {% endif %}

    {% endif %}
{% endfor %}
};

/**************************************************************************/
/** The service list */
/**************************************************************************/
struct tfm_spm_service_t service[] =
{
{% for partition in partitions %}
    {% if partition.attr.tfm_partition_ipc %}
        {% if partition.manifest.services %}
            {% if partition.attr.conditional %}
#ifdef {{partition.attr.conditional}}
            {% endif %}
    /******** {{partition.manifest.name}} ********/
            {% for service in partition.manifest.services %}
    {{'{'}}
        .service_db = NULL,
        .partition = NULL,
        .handle_list = {0},
        .list = {0},
    {{'}'}},
            {% endfor %}
            {% if partition.attr.conditional %}
#endif /* {{partition.attr.conditional}} */
            {% endif %}
        {% endif %}

    {% endif %}
{% endfor %}
};

/* p_service field of tracking table will be populated in spm_init() */
struct stateless_service_tracking_t stateless_service_ref[] = {
    {% for service in stateless_services %}
    {{'{'}}
            {% if service is not none %}
        .sid = {{service.sid}},
            {% else %}
        .sid = 0,
            {% endif %}
    {{'}'}},
    {% endfor %}
};

#endif /* __TFM_SERVICE_LIST_INC__ */
